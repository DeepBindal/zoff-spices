// STEP 2: Setup Razorpay options
      const options = {
        key: process.env.NEXT_PUBLIC_RAZORPAY_KEY,
        amount: amount * 100,
        currency: "INR",
        name: "ZOFF",
        description: "Test Order",
        order_id: orderData.id,
        image:
          "https://zofffoods.com/cdn/shop/files/image_1.png?v=1736009498&width=195",
        handler: async function (response) {
          try {
            const { razorpay_payment_id, razorpay_order_id, razorpay_signature } = response;

            const order = {
              items: data,
              total: amount,
              user: userId,
              orderId: razorpay_order_id,
              status: "Paid",
            };

            const paymentData = {
              order,
              cartId: items._id,
              orderId: razorpay_order_id,
              razorpayPaymentId: razorpay_payment_id,
              razorpaySignature: razorpay_signature,
            };

            const res = await fetch("/api/verifyOrder", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(paymentData),
            });

            if (res.ok) {
              toast.success("Order placed successfully!");
              router.push("/");
              setQuantity(0);
            } else {
              throw new Error("Failed to save order");
            }
          } catch (err) {
            console.error("Payment success but order error:", err);
            toast.error("Payment succeeded but order saving failed.");
          } finally {
            setIsLoading(false);
          }
        },
        prefill: {
          name: "John Doe",
          email: "john@example.com",
          contact: "9999999999",
        },
        theme: {
          color: "#FFD700",
        },
      };

      const rzp = new window.Razorpay(options);
      rzp.open();